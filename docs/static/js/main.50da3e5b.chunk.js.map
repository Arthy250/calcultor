{"version":3,"sources":["components/Calculadora/Style/CalculadoraStyles.jsx","components/Calculadora/calculadora.jsx","index.js"],"names":["Container","styled","div","Screen","Previous","Courrent","Button","button","gridSpan","operation","control","equals","period","Calculadora","useState","current","setCurrent","previuos","setPreviuos","setOperation","appendValue","element","value","target","getAttribute","includes","chooseoperation","compute","resultado","previousNumber","parseFloat","courrentNumber","isNaN","className","onClick","String","slice","data","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50da3e5b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  width:400px;\n  margin: 40px auto;\n  grid-template-columns: repeat(4, 100px);\n  grid-template-rows: minmax(120px, auto) repeat(5, 100px);\n  box-shadow: 2px 2px 10px #333;\n  border-radius: 10px;\n`\n\nexport const Screen = styled.div`\n  grid-column: 1 / -1;\n  background-color: rgba(60, 64, 67, 0.75);\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  padding: 10px;\n  word-wrap: break-word;\n  word-break: break-all;\n  text-align:right;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`\n\nexport const Previous = styled.div`\n  color: rgba(255, 255, 255, 0.75);\n  font-size: 1.5rem;\n`\nexport const Courrent = styled.div`\n  color: white;\n  font-size: 2.5rem;\n`\n\nexport const Button = styled.button`\n   cursor: pointer;\n   font-size: 2rem;\n   border: 1px outset white;\n   outline: none;\n   background-color: rgba(255, 255, 255, 0.75);\n   &:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n   }\n\n   /* Expand button */ \n   ${ ({gridSpan}) => gridSpan &&  `grid-column: span ${gridSpan};` }\n\n   /* Operation color */\n   ${ ({operation}) => operation &&  `background-color: gray;` }\n\n   /* Control buttons */\n   ${ ({control}) => control &&  `background-color: skyblue;` }\n\n   /* Equal button */\n   ${ ({equals}) => equals &&  `background-color: gray; border-bottom-right-radius:10px` }\n\n   /* Period button */\n   ${ ({period}) => period &&  `background-color: skyblue; border-bottom-left-radius:10px` }\n`","import React, {useState} from 'react';\nimport {Button, Container, Courrent, Previous, Screen} from './Style/CalculadoraStyles'\n\nexport const Calculadora = () => {\n\n  const [current, setCurrent] = useState('');\n  const [previuos, setPreviuos] = useState('');\n  const [operation, setOperation] = useState('');\n\n  const appendValue = (element) => {\n    const value = element.target.getAttribute('data');\n\n    if (value === '.' && current.includes('.')) return\n    setCurrent(current + value);\n  }\n\n  const handleDelete = () => {\n    setCurrent( String(current).slice(0, -1) );\n  }\n\n  const handleClear = () => {\n    setCurrent('');\n    setPreviuos('');\n    setOperation('');\n  }\n\n  const chooseoperation = (element) => {\n\n    if(current === '') return\n    if(previuos !== '') {\n      let value = compute();\n      setPreviuos(value);\n    } else {\n      setPreviuos(current);\n    }\n\n    setCurrent('')\n    setOperation(element.target.getAttribute('data'));\n  }\n\n  const handleEqual = () => {\n\n    let value = compute();\n    if (value === undefined || value === null) return\n\n    setCurrent(value);\n    setPreviuos('');\n    setOperation('');\n  }\n\n  const compute = () =>{\n\n    let resultado;\n    let previousNumber = parseFloat(previuos);\n    let courrentNumber = parseFloat(current);\n\n    if( isNaN(previousNumber) || isNaN(courrentNumber) )return\n\n    switch (operation) {\n      case 'รท':\n        resultado = previousNumber / courrentNumber;\n        break;\n      case 'x':\n        resultado = previousNumber * courrentNumber;\n        break;\n      case '+':\n        resultado = previousNumber + courrentNumber;\n        break;\n      case '-':\n        resultado = previousNumber - courrentNumber;\n        break;\n\n      default:\n        break;\n    }\n\n    return resultado;\n\n  }\n  \n  return (\n    <Container className=\"calculadora\">\n      <Screen>\n        <Previous>{previuos} {operation}</Previous>\n        <Courrent>{current}</Courrent>\n      </Screen>\n      <Button gridSpan={2} control onClick={handleClear}>AC</Button>\n      <Button control onClick={handleDelete}>DEL</Button>\n      <Button data={'รท'} onClick={chooseoperation} operation>รท</Button>\n      <Button data={'7'} onClick={appendValue}>7</Button>\n      <Button data={'8'} onClick={appendValue}>8</Button>\n      <Button data={'9'} onClick={appendValue}>9</Button>\n      <Button data={'x'} onClick={chooseoperation} operation>X</Button>\n      <Button data={'4'} onClick={appendValue}>4</Button>\n      <Button data={'5'} onClick={appendValue}>5</Button>\n      <Button data={'6'} onClick={appendValue}>6</Button>\n      <Button data={'+'} onClick={chooseoperation} operation>+</Button>\n      <Button data={'1'} onClick={appendValue}>1</Button>\n      <Button data={'2'} onClick={appendValue}>2</Button>\n      <Button data={'3'} onClick={appendValue}>3</Button>\n      <Button data={'-'} onClick={chooseoperation} operation>-</Button>\n      <Button period data={'.'} onClick={appendValue}>.</Button>\n      <Button data={'0'} onClick={appendValue}>0</Button>\n      <Button gridSpan={2} onClick={handleEqual} equals>=</Button>\n    </Container>\n  )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Calculadora } from './components/Calculadora/calculadora';\n\nReactDOM.render(\n    <Calculadora />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}